@model RecipeViewModel

<div class="flex-container-column">
    <div class="title">New recipe</div>

    <form asp-action="AddNewRecipe" method="post" role="form">

        <div class="section">
            <div class="flex-container-row">
                <div>
                    <label asp-for="Recipe.Name" class="label">Recipe name</label>
                </div>
                <div>
                    <input asp-for="Recipe.Name" class="form-control"/>
                </div>
            </div>
        </div>

        <div class="section">
            <div class="name" asp-for="Ingredients">Ingredients:</div>
            <div class="flex-container-column">
                <div id="Ingredients">
                    <div id="0">
                        <div class="flex-container-row">
                            <label asp-for="Recipe.Ingredients[0].Name" class="label">Name</label>
                            <div>
                                <input asp-for="Recipe.Ingredients[0].Name" id="ingredient-name-0" class="form-control offeredIngredients"/>
                            </div>

                            <label asp-for="Recipe.Ingredients[0].Amount" class="label">Amount</label>
                            <div>
                                <input asp-for="Recipe.Ingredients[0].Amount" id="ingredient-amount-0" class="form-control"/>
                            </div>

                            <label asp-for="Recipe.Ingredients[0].MeasuringUnit" class="label">MeasuringUnit</label>
                            <div>
                                <select asp-for="Recipe.Ingredients[0].MeasuringUnit" id="ingredient-measuringUnit-0" class="form-control offeredMeasuringUnit"/></select>
                            </div>
                            <img src="~/images/delete-icon.png" class="icon color" alt="Delete!">
                        </div>
                    </div>
                </div>
                <img src="~/images/plus-icon.png" class="icon color" alt="New ingredient" id="addInputsForIngredient">
            </div>
        </div>

        <div class="section">
            <div class="name">Steps:</div>
            <div class="flex-container-column section">
                <div id="Steps">
                    <div id="0">
                        <div class="flex-container-row">
                            <label class="label">1.</label>

                            <label asp-for="Recipe.Steps[0].Description" class="label">StepDescription</label>
                            <div id="description" class="">
                                <input asp-for="Recipe.Steps[0].Description" class="form-control step-input" id="step-input-0" required maxlength="40" />
                            </div>

                            <img src="~/images/up-arrow.png" class="icon color" alt="Up!">
                            <img src="~/images/down-arrow.png" class="icon color" alt="Down!">
                            <img src="~/images/delete-icon.png" class="icon color" alt="Delete!">
                        </div>
                    </div>
                </div>
                <img src="~/images/plus-icon.png" class="icon color" alt="New step" id="addInputsForStep">
            </div>
        </div>

        <div class="buttons">
            <input type="submit" class="btn color" value="Add recipe" />
            <input class="btn color" type="reset" value="Reset">
            <a asp-controller="Home" asp-action="Index" class="btn color" role="button">Cancel</a>
        </div>
    </form>
</div>

<script>
    $(document).ready(function () {
        $("#addInputsForIngredient").click(addInputsForIngredient);
        $("#addInputsForStep").click(addInputsForStep);
        $("#Ingredients img").click(deleteIngredient);
        $("#Steps img")[0].onclick = upButton;
        $("#Steps img")[1].onclick = downButton;
        $("#Steps img")[2].onclick = deleteStep;

        getOfferedMeasuringUnits();
        getOfferedIngredients();
    });

    var ingredientNum = 0;

    function addInputsForIngredient() {
        ingredientNum += 1;

        var ingredientDiv = document.createElement("div");
        ingredientDiv.id = ingredientNum;

        var div1 = document.createElement("div");
        div1.className = "flex-container-row";

        var labelName = document.createElement("label");
        labelName.htmlFor = 'Recipe.Ingredients[' + ingredientNum + '].Name';
        labelName.className = "label";
        labelName.innerHTML = "Name";
        var divName = document.createElement("div");
        var inputName = document.createElement("input");
        inputName.htmlFor = 'Recipe.Ingredients[' + ingredientNum + '].Name';
        inputName.name = 'Recipe.Ingredients[' + ingredientNum + '].Name';
        inputName.id = 'ingredient-name-' + ingredientNum;
        inputName.className = "form-control offeredIngredients";
        divName.appendChild(inputName);

        var labelAmount = document.createElement("label");
        labelAmount.htmlFor = 'Recipe.Ingredients[' + ingredientNum + '].Amount';
        labelAmount.className = "label";
        labelAmount.innerHTML = "Amount";
        var divAmount = document.createElement("div");
        var inputAmount = document.createElement("input");
        inputAmount.htmlFor = 'Recipe.Ingredients[' + ingredientNum + '].Amount';
        inputAmount.name = 'Recipe.Ingredients[' + ingredientNum + '].Amount';
        inputAmount.id = 'ingredient-amount-' + ingredientNum;
        inputAmount.className = "form-control";
        divAmount.appendChild(inputAmount);

        var labelMeasuringUnit = document.createElement("label");
        labelMeasuringUnit.htmlFor = 'Recipe.Ingredients[' + ingredientNum + '].MeasuringUnit';
        labelMeasuringUnit.className = "label";
        labelMeasuringUnit.innerHTML = "MeasuringUnit";
        var divMeasuringUnit = document.createElement("div");
        var inputMeasuringUnit = document.createElement("select");
        inputMeasuringUnit.htmlFor = 'Recipe.Ingredients[' + ingredientNum + '].MeasuringUnit';
        inputMeasuringUnit.name = 'Recipe.Ingredients[' + ingredientNum + '].MeasuringUnit';
        inputMeasuringUnit.id = 'ingredient-measuringUnit-' + ingredientNum;
        inputMeasuringUnit.className = "form-control offeredMeasuringUnit";
        divMeasuringUnit.appendChild(inputMeasuringUnit);

        var img1 = document.createElement("img");
        img1.src = "/images/delete-icon.png";
        img1.alt = "Delete!";
        img1.className = "icon color";
        img1.onclick = deleteIngredient;

        div1.appendChild(labelName);
        div1.appendChild(divName);
        div1.appendChild(labelAmount);
        div1.appendChild(divAmount);
        div1.appendChild(labelMeasuringUnit);
        div1.appendChild(divMeasuringUnit);
        div1.appendChild(img1);

        ingredientDiv.appendChild(div1);

        document.getElementById("Ingredients").appendChild(ingredientDiv);
        setOfferedMeasuringUnits();
        setOfferedIngredients();
    }

    function deleteIngredient() {
        if (ingredientNum > 0) {
            var ingredientId = event.srcElement.parentElement.parentElement.id;

            var k;
            for (var k = parseInt(ingredientId); k < $("#Ingredients").children().length - 1; k++) {
                kNext = k + 1;
                $("#ingredient-name-" + k).val($("#ingredient-name-" + kNext).val());
                $("#ingredient-amount-" + k).val($("#ingredient-amount-" + kNext).val());
                $("#ingredient-measuringUnit-" + k).val($("#ingredient-measuringUnit-" + kNext).val());
            }

            $("#Ingredients").children().last().remove();
            ingredientNum -= 1;
        }
        }

    var stepNum = 0;

    function addInputsForStep() {
        stepNum += 1;

        var stepDiv = document.createElement("div");
        stepDiv.id = stepNum;

        var div1 = document.createElement("div");
        div1.className = "flex-container-row";

        var labelOrder = document.createElement("label");
        labelOrder.className = "label";
        var stepOrder = stepNum + 1;
        labelOrder.innerHTML = stepOrder + ".";

        var labelDescription = document.createElement("label");
        labelDescription.htmlFor = 'Recipe.Steps[' + stepNum + '].Description';
        labelDescription.innerHTML = "StepDescription";
        labelDescription.className = "label";

        var divDescription = document.createElement("div");
        var inputDescription = document.createElement("input");
        inputDescription.htmlFor = 'Recipe.Steps[' + stepNum + '].Description';
        inputDescription.name = 'Recipe.Steps[' + stepNum + '].Description';
        inputDescription.className = "form-control step-input";
        inputDescription.id = 'step-input-' + stepNum;
        divDescription.appendChild(inputDescription);

        var img1 = document.createElement("img");
        img1.src = "/images/up-arrow.png";
        img1.alt = "Up!";
        img1.className = "icon color";
        img1.onclick = upButton;

        var img2 = document.createElement("img");
        img2.src = "/images/down-arrow.png";
        img2.alt = "Down!";
        img2.className = "icon color";
        img2.onclick = downButton;

        var img3 = document.createElement("img");
        img3.src = "/images/delete-icon.png";
        img3.alt = "Delete!";
        img3.className = "icon color";
        img3.onclick = deleteStep;

        div1.appendChild(labelOrder);
        div1.appendChild(labelDescription);
        div1.appendChild(divDescription);
        div1.appendChild(img1);
        div1.appendChild(img2);
        div1.appendChild(img3);

        stepDiv.appendChild(div1);

        document.getElementById("Steps").appendChild(stepDiv);
    }

    function deleteStep() {
        if (stepNum > 0) {
            var stepId = event.srcElement.parentElement.parentElement.id;

            var k;
            for (k = parseInt(stepId); k < $("#Steps").children().length - 1; k++) {
                kNext = k + 1;
                $("#step-input-" + k).val($("#step-input-" + kNext).val());
            }

            $("#Steps").children().last().remove();
            stepNum -= 1;
        }
        }

    function downButton() {
        var stepId = event.srcElement.parentElement.parentElement.id;

        if ($("#Steps").children().last().attr('id') != $("#Steps").children().get(parseInt(stepId)).id) {
            var nextStepId = event.srcElement.parentElement.parentElement.nextElementSibling.id;
            var str = $("#step-input-" + stepId).val();
            $("#step-input-" + stepId).val($("#step-input-" + nextStepId).val());
            $("#step-input-" + nextStepId).val(str);
        }
    }

    function upButton() {
        var stepId = event.srcElement.parentElement.parentElement.id;

        if ($("#Steps").children().first().attr('id') != $("#Steps").children().get(parseInt(stepId)).id) {
            var previousStepId = event.srcElement.parentElement.parentElement.previousElementSibling.id;
            var str = $("#step-input-" + previousStepId).val();
            $("#step-input-" + previousStepId).val($("#step-input-" + stepId).val());
            $("#step-input-" + stepId).val(str);
        }
    }

    var offeredMeasuringUnit = [];
    function getOfferedMeasuringUnits() {
        $.ajax(
            {
                type: "GET",
                url: "/Home/getOfferedMeasuringUnits",

                success: function (data) {
                    offeredMeasuringUnit = data;
                    console.log("success - Home/getOfferedMeasuringUnit");
                    setOfferedMeasuringUnits();
                },
                failure: function (data) {
                    console.log("failure - Home/getOfferedMeasuringUnit");
                },
                error: function (data) {
                    console.log("error - Home/getOfferedMeasuringUnit");
                }
            });
    }

    function setOfferedMeasuringUnits() {
        for (i = 0; i < offeredMeasuringUnit.length; i++) {
            var options = document.createElement("option");
            options.innerHTML = offeredMeasuringUnit[i].name;
            options.value = offeredMeasuringUnit[i].value
            $(".offeredMeasuringUnit").last().append(options);
        }
    }

    var offeredIngredients = [];
    function getOfferedIngredients() {
        $.ajax("/Home/getOfferedIngredients",
            {
                type: "GET",
                url: "/Home/getOfferedIngredients",

                success: function (data) {
                    offeredIngredients = data;
                    console.log("success - Home/getOfferedIngredients");
                    setOfferedIngredients();
                },
                failure: function (data) {
                    console.log("failure - Home/getOfferedIngredients");
                },
                error: function (data) {
                    console.log("error - Home/getOfferedIngredients");
                }
            }
        );
    }

    function setOfferedIngredients() {
        $(".offeredIngredients").last().autocomplete({
            source: offeredIngredients
        });
    }
</script>